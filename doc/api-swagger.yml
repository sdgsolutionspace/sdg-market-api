swagger: '2.0'
info:
  title: SDG backend API
  description: This API allow to store project configuration and provide a token trading system based on project participation
  version: 1.0.0
paths:
  /api/v1/git-projects:
    get:
      summary: Get all projects.
      responses:
        '200':
          description: Return the list of git project
          schema:
            items:
              $ref: '#/definitions/GitProject'
            type: array
    post:
      summary: Create a new a gitProject entry.
      parameters:
        - name: Query body
          in: body
          description: Definition of the project to create
          schema:
            $ref: '#/definitions/GitProjectType'
      responses:
        '200':
          description: Return the created git project
          schema:
            $ref: '#/definitions/GitProject'
  '/api/v1/git-projects/{gitProject}':
    get:
      summary: Get single project by id.
      parameters:
        - name: gitProject
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return project corresponding to the ID
          schema:
            $ref: '#/definitions/GitProject'
    put:
      summary: Update a gitProject entry.
      parameters:
        - name: Query body
          in: body
          description: Definition of the project to update
          schema:
            $ref: '#/definitions/GitProjectType'
        - name: gitProject
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return the updated git project
          schema:
            $ref: '#/definitions/GitProject'
    delete:
      summary: Remove a project.
      parameters:
        - name: gitProject
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return a success array
  /api/v1/sell-offers:
    get:
      summary: Get all selling offers.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: project
          in: query
          allowEmptyValue: false
          required: false
          description: Project for which getting the offers
          type: string
          pattern: \d+
        - name: include_expired
          in: query
          allowEmptyValue: false
          required: true
          description: Project for which getting the offers
          type: string
          default: '0'
          pattern: ^(0|1)$
      responses:
        '200':
          description: Return the list of selling offer
          schema:
            items:
              $ref: '#/definitions/SellOffer'
            type: array
    post:
      summary: Create a new offer entry.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: Query body
          in: body
          description: Reflect the offer to make
          schema:
            $ref: '#/definitions/SellOfferType'
      responses:
        '200':
          description: Return the sell offer saved
          schema:
            $ref: '#/definitions/SellOffer'
  '/api/v1/sell-offers/{sellOffer}':
    get:
      summary: Get single user by id.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: sellOffer
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return the selling offer corresponding to the id
          schema:
            $ref: '#/definitions/SellOffer'
    put:
      summary: Update SellOffer entry.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: Query body
          in: body
          description: Reflect the new data of the offer
          schema:
            $ref: '#/definitions/SellOfferType'
        - name: sellOffer
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return the updated offer
          schema:
            $ref: '#/definitions/Transaction'
    delete:
      summary: Delete an offer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: sellOffer
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return a success array
  '/api/v1/sell-offers/{sellOffer}/buy':
    put:
      summary: Buy part of an offer.
      parameters:
        - name: Authorization
          in: header
          required: true
          description: 'JWT token for authentication Bearer: Your_Token'
          type: string
        - name: Query body
          in: body
          description: Reflect the buying proposition
          schema:
            $ref: '#/definitions/TransactionBuyTokenType'
        - name: sellOffer
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return the result of the transaction
          schema:
            $ref: '#/definitions/Transaction'
  /api/v1/contributions:
    get:
      summary: Get all contributions.
      parameters:
        - name: project
          in: query
          allowEmptyValue: false
          required: false
          description: Project for which getting the participations
          type: string
          pattern: \d+
        - name: user
          in: query
          allowEmptyValue: false
          required: false
          description: User for which getting the participations
          type: string
          pattern: \d+
      responses:
        '200':
          description: Return the list of contributions
          schema:
            items:
              $ref: '#/definitions/ProjectParticipation'
            type: array
    post:
      summary: Create a new contribution entry.
      responses:
        default:
          description: ''
  '/api/v1/contributions/{contribution}':
    get:
      summary: Get single contribution by id.
      parameters:
        - name: contribution
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return contribution corresponding to the ID
          schema:
            $ref: '#/definitions/ProjectParticipation'
    delete:
      summary: Remove a contribution.
      parameters:
        - name: contribution
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Return a success array
    put:
      summary: Create a new contribution entry.
      parameters:
        - name: contribution
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  /api/v1/connect/github/check:
    get:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    post:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    put:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    patch:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    delete:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    options:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
    head:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
  /api/v1/checks/connect:
    get:
      summary: |-
        After going to GitHub, you're redirected back here
        because this is the "redirect_route" you configured
        in config/packages/knpu_oauth2_client.yaml.
      responses:
        default:
          description: ''
  /api/v1/transactions:
    get:
      summary: Get all transactions.
      parameters:
        - name: project
          in: query
          allowEmptyValue: false
          required: false
          description: Filter by a specific project id
          type: string
          default: ''
          pattern: \d+
        - name: from_user
          in: query
          allowEmptyValue: false
          required: false
          description: Filter by a specific emitter user
          type: string
          default: ''
          pattern: \d+
        - name: to_user
          in: query
          allowEmptyValue: false
          required: false
          description: Filter by a specific receiver user
          type: string
          default: ''
          pattern: \d+
      responses:
        default:
          description: ''
    post:
      summary: Create a new Transaction entry.
      responses:
        default:
          description: ''
  '/api/v1/transactions/{transaction}':
    get:
      summary: Get single user by id.
      parameters:
        - name: transaction
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
    put:
      summary: Create a new Transaction entry.
      parameters:
        - name: transaction
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  /api/v1/purchase-offers:
    get:
      summary: Get all projects.
      parameters:
        - name: project
          in: query
          allowEmptyValue: false
          required: false
          description: Project for which getting the offers
          type: string
          pattern: \d+
        - name: include_expired
          in: query
          allowEmptyValue: false
          required: true
          description: Project for which getting the offers
          type: string
          default: '0'
          pattern: ^(0|1)$
      responses:
        default:
          description: ''
    post:
      summary: Create a new PurchaseOffer entry.
      responses:
        default:
          description: ''
  '/api/v1/purchase-offers/{purchaseOffer}':
    get:
      summary: Get single user by id.
      parameters:
        - name: purchaseOffer
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
    put:
      summary: Create a new PurchaseOffer entry.
      parameters:
        - name: purchaseOffer
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
    delete:
      parameters:
        - name: purchaseOffer
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  '/api/v1/exceptions/{exception}/show':
    patch:
      parameters:
        - name: exception
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  '/api/v1/users/{user}/blacklist':
    patch:
      summary: Blacklist user.
      parameters:
        - name: user
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  '/api/v1/users/{user}/roles/{role}/assign':
    patch:
      summary: Assign role.
      parameters:
        - name: user
          in: path
          required: true
          type: string
        - name: role
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  /api/v1/user/refresh-token:
    get:
      responses:
        default:
          description: ''
  /api/v1/users:
    get:
      summary: Get all users.
      responses:
        default:
          description: ''
    post:
      summary: Register User.
      responses:
        default:
          description: ''
  '/api/v1/users/{username}':
    get:
      summary: Get single user by id.
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  /api/v1/user/me:
    get:
      responses:
        default:
          description: ''
  '/api/v1/user/{username}/promote':
    patch:
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  '/api/v1/user/{username}/demote':
    patch:
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        default:
          description: ''
  /api/doc.json:
    get:
      responses:
        default:
          description: ''
definitions:
  GitProject:
    required:
      - name
      - gitAddress
      - projectAddress
      - active
    properties:
      id:
        type: integer
      name:
        type: string
      git_address:
        type: string
      project_address:
        type: string
      project_value:
        type: integer
      active:
        type: boolean
    type: object
  GitProjectType:
    required:
      - active
      - name
      - gitAddress
      - projectAddress
    properties:
      active:
        type: boolean
      name:
        type: string
      gitAddress:
        type: string
      projectAddress:
        type: string
    type: object
  SellOffer:
    required:
      - numberOfTokens
      - sellPricePerToken
      - project
    properties:
      id:
        type: integer
      number_of_tokens:
        type: number
        format: float
      sell_price_per_token:
        type: number
        format: float
      offer_starts_utc_date:
        type: string
        format: date-time
        pattern: 'Y-m-d H:i:s'
      offer_expires_at_utc_date:
        type: string
        format: date-time
        pattern: 'Y-m-d H:i:s'
      project:
        $ref: '#/definitions/GitProject'
      seller:
        $ref: '#/definitions/User'
    type: object
  TransactionBuyTokenType:
    required:
      - nbTokens
      - sellOffer
    properties:
      nbTokens:
        type: number
      sellOffer:
        type: string
        format: App\Entity\SellOffer id
    type: object
  Transaction:
    required:
      - toUser
      - sellOffer
      - nbTokens
      - nbSdg
      - transactionLabel
    properties:
      id:
        type: integer
      from_user:
        $ref: '#/definitions/User'
      to_user:
        $ref: '#/definitions/User'
      project:
        $ref: '#/definitions/GitProject'
      sell_offer:
        $ref: '#/definitions/SellOffer'
      nb_tokens:
        type: number
        format: float
      nb_sdg:
        type: number
        format: float
      transaction_label:
        type: string
    type: object
  SellOfferType:
    required:
      - numberOfTokens
      - sellPricePerToken
      - offerStartsUtcDate
      - offerExpiresAtUtcDate
      - project
    properties:
      numberOfTokens:
        type: number
      sellPricePerToken:
        type: number
      offerStartsUtcDate:
        type: string
        format: date-time
      offerExpiresAtUtcDate:
        type: string
        format: date-time
      project:
        type: string
        format: App\Entity\GitProject id
      seller:
        type: string
        format: App\Entity\User id
    type: object
  ProjectParticipation:
    required:
      - commitId
      - gitProject
    properties:
      id:
        type: integer
      calculation_utc_datetime:
        type: string
        format: date-time
        pattern: 'Y-m-d H:i:s'
      commit_date:
        type: string
        format: date-time
        pattern: 'Y-m-d H:i:s'
      commit_id:
        type: string
      git_project:
        $ref: '#/definitions/GitProject'
      transaction:
        $ref: '#/definitions/Transaction'
      committer_email:
        type: string
      committer_username:
        type: string
    type: object
  User:
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
      username:
        type: string
      github_id:
        type: string
      timezone:
        type: string
      active:
        type: boolean
      roles:
        additionalProperties: true
        type: object
      black_listed:
        type: boolean
    type: object
